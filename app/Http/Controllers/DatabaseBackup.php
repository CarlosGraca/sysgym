<?php
/**
 * Created by PhpStorm.
 * User: MS-INSYS
 * Date: 06/05/2017
 * Time: 13:41
 */
namespace App\Http\Controllers;


class DatabaseBackup extends Controller {
    private $db;
    private $sql, $removeAI;
    private $system_version;
    private $system_name;

    public function __construct($pdo) {
        $this->removeAI = true;
        $this->system_name = config('app.name');
        $this->system_version = config('app.version');
        $this->db = $pdo;
    }

    private function ln($text = '') {
        $this->sql = $this->sql . $text . "\n";
    }

    public function backup($file) {
        $this->ln("SET FOREIGN_KEY_CHECKS=0;\n");

        $date = date_create();
        $date_string = date_format($date, 'Y-m-d H:i:s');

        $user = \Auth::user();

        $this->ln("-- System: {$this->system_name}\n-- version {$this->system_version}\n-- http://sysgym.com/\n--\n-- Host: 127.0.0.1\n-- Generated by: {$user->name}\n-- Generation Time: {$date_string}\n");
        $this->writeComment("Database `sysgym`");

        $tables = $this->db->query('SHOW TABLES')->fetchAll(\PDO::FETCH_BOTH);

        foreach ($tables as $table) {
            $table = $table[0];

            $this->writeComment("Table structure `{$table}`"); //CREATE COMMENT

            $this->ln('DROP TABLE IF EXISTS `'.$table.'`;');

            $schemas = $this->db->query("SHOW CREATE TABLE `{$table}`")->fetchAll(\PDO::FETCH_ASSOC);

            foreach ($schemas as $schema) {
                $schema = $schema['Create Table'];
                if($this->removeAI) $schema = preg_replace('/AUTO_INCREMENT=([0-9]+)(\s{0,1})/', '', $schema);
                $this->ln($schema.";\n\n");
            }

            $this->writeComment("Extracting data from table `{$table}`");
            $dataReader = $this->db->query("SELECT * FROM `{$table}`")->fetchAll(\PDO::FETCH_ASSOC);

            $i = 0;

            $data_string = '';

            foreach ($dataReader as $data) {

                $itemNames = array_keys($data);
                $itemNames = array_map("addslashes", $itemNames);
                $items = join('`,`', $itemNames);
                $itemValues = array_values($data);
                $itemValues = array_map("addslashes", $itemValues);
                $valueString = join("','", $itemValues);
                $valueString = "('" . $valueString . "'),";
                $values = "\n" . $valueString;
                if ($values != "") {
                    if($i == 0){
                        $data_string .= "INSERT INTO `{$table}` (`$items`) VALUES " . rtrim($values, ",") ;
                    }else{
                        $data_string .= "," . rtrim($values, ",") ;
                    }
                }

                $i++;

            }
           if(count($dataReader) > 0)
               $data_string .= ";" . PHP_EOL;

            $this->ln($data_string."\n");
        }

        file_put_contents($file, $this->sql);

        return true;
    }

    public function restore($file) {
        $result = true;

        if ( file_exists( $file ) ) {

            $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);

            $buffer = '';

            foreach ($lines as $line) {
                // Skipping comments
                if (substr(ltrim($line), 0, 2) == '--' || $line[0]=='#')
                    continue;

                // Skip empty lines
                if (($line = trim($line)) == ''){
                    continue;
                }
                // Multiline query
                else if($line[strlen($line)-1] !=";"){
                    $buffer .= $line;
                    continue;
                }
                else
                    if ($buffer) {
                        $line = $buffer . $line;
                        $buffer = '';
                    }


                //// here we go
                try {
                    $this->db->query($line);
                } catch(\PDOException $e) {
//                    echo $line."\n";
                    echo $e->getMessage();
                    return false;
                }
            }

        }else{
            $result = false;
        }

        return $result;

    }

    public function writeComment($string) {
        $this->sql = $this->sql.'-- -------------------------------------------' . PHP_EOL;
        $this->sql = $this->sql.'-- ' . $string . PHP_EOL;
        $this->sql = $this->sql.'-- -------------------------------------------' . PHP_EOL. PHP_EOL;
    }

}